#!/bin/bash

#
# Ubiquitous Moodle
#
# @author Luke Carrier <luke@carrier.im>
# @copyright 2016 Luke Carrier
#

set -euo pipefail
IFS=$'\n\t'

shopt -s extglob
shopt -s nullglob

in_array() {
    local haystack=${1}[@]
    local needle="$2"

    for i in "${!haystack}"; do
        if [[ "$i" == "$needle" ]]; then
            return 0
        fi
    done

    return 1
}

systemd_get_service_instances() {
    local service="$1"
    for instance in /etc/systemd/system/$service.*.service; do
        instance="${instance#/etc/systemd/system/$service.}"
        instance="${instance%.service}"
        echo $instance
    done
}

UBIQUITOUS_JAVA_HUB="/usr/bin/java -Xms512m -Xmx512m -Djava.net.preferIPv4Stack=true"
UBIQUITOUS_JAVA_NODE="/usr/bin/java -Xms512m -Xmx512m -Djava.net.preferIPv4Stack=true"
UBIQUITOUS_JAVA_CHROME="-Dwebdriver.chrome.driver=/opt/selenium/chromedriver/chromedriver"
UBIQUITOUS_JAVA_SELENIUM="-jar /opt/selenium/selenium-server.jar"
UBIQUITOUS_SELENIUM_HUB_CONFIG="/opt/selenium/hub.json"
UBIQUITOUS_SELENIUM_HUB_LOG="/var/log/selenium-hub.log"
UBIQUITOUS_SELENIUM_NODE_LOG="/var/log/selenium-node.log"
UBIQUITOUS_XVFB_PIDFILE="/run/xvfb.pid"
UBIQUITOUS_XVFB_DISPLAY_BASE="55"
UBIQUITOUS_X11VNC_PIDFILE="/run/x11vnc.pid"
UBIQUITOUS_X11VNC_PORT_BASE="5995"

UBIQUITOUS_NGINX_PIDFILE="/run/nginx.pid"
UBIQUITOUS_PHPFPM_PIDFILE="/run/php/php7.0-fpm.pid"
UBIQUITOUS_SELENIUM_HUB_PIDFILE="/run/selenium-hub.pid"
UBIQUITOUS_SELENIUM_NODE_PIDFILE="/run/selenium-node.pid"

if [ $# -lt 1 ] || [ $# -gt 2 ]; then
    abort $ERROR_PARAMS "usage: $(basename "$0") <ACTION (start, stop, restart)> [SERVICE (nginx, php-fpm, postgresql, selenium-hub, selenium-node, x11vnc, xvfb)]"
fi

action="$1"
IFS=' ' declare -a UBIQUITOUS_SERVICES=(nginx php-fpm postgresql selenium-hub selenium-node x11vnc xvfb)
if in_array UBIQUITOUS_SERVICES "${2:-UNSET}"; then
    services="$2"
else
    services="${UBIQUITOUS_SERVICES[@]}"
fi

start() {
    if [[ " ${services[@]} " =~ " nginx " ]]; then
        start-stop-daemon --start \
                --oknodo --pidfile "$UBIQUITOUS_NGINX_PIDFILE" \
                --startas "$(which nginx)" \
                -- -g 'daemon on; master_process on;'
    fi

    if [[ " ${services[@]} " =~ " php-fpm " ]]; then
        start-stop-daemon --start \
                --oknodo --pidfile "$UBIQUITOUS_PHPFPM_PIDFILE" \
                --startas "$(which php-fpm7.0)" \
                -- --daemonize --fpm-config /etc/php/7.0/fpm/php-fpm.conf
    fi

    if [[ " ${services[@]} " =~ " postgresql " ]]; then
        /usr/bin/pg_ctlcluster \
                --skip-systemctl-redirect -m fast 9.5-main start -- -w
    fi

    if [[ " ${services[@]} " =~ " selenium-hub " ]]; then
        start-stop-daemon --start \
                --oknodo --background --make-pidfile --pidfile "$UBIQUITOUS_SELENIUM_HUB_PIDFILE" \
                --user selenium --startas /bin/bash \
                -- -c "exec ${UBIQUITOUS_JAVA_HUB} ${UBIQUITOUS_JAVA_SELENIUM} -role hub -hubConfig ${UBIQUITOUS_SELENIUM_HUB_CONFIG} -log ${UBIQUITOUS_SELENIUM_HUB_LOG}"
    fi

    if [[ " ${services[@]} " =~ " xvfb " ]]; then
        instances=( $(systemd_get_service_instances xvfb) )
        for instance in ${instances[@]}; do
            start-stop-daemon --start \
                    --oknodo --background --make-pidfile --pidfile "${UBIQUITOUS_XVFB_PIDFILE}.${instance}" \
                    --user selenium --startas /usr/bin/Xvfb \
                    -- ":$(expr $UBIQUITOUS_XVFB_DISPLAY_BASE + $instance - 1)" -screen 0 1280x1024x24
        done
    fi

    if [[ " ${services[@]} " =~ " x11vnc " ]]; then
        instances=( $(systemd_get_service_instances x11vnc) )
        for instance in ${instances[@]}; do
            start-stop-daemon --start \
                    --oknodo --background --make-pidfile --pidfile "${UBIQUITOUS_X11VNC_PIDFILE}.${instance}" \
                    --user selenium --startas /usr/bin/x11vnc \
                    -- -rfbport "$(expr $UBIQUITOUS_X11VNC_PORT_BASE + $instance - 1)" -display ":$(expr $UBIQUITOUS_XVFB_DISPLAY_BASE + $instance - 1)" -forever
        done
    fi

    if [[ " ${services[@]} " =~ " selenium-node " ]]; then
        instances=( $(systemd_get_service_instances selenium-node) )
        for instance in ${instances[@]}; do
            start-stop-daemon --start \
                    --oknodo --background --make-pidfile --pidfile "${UBIQUITOUS_SELENIUM_NODE_PIDFILE}.${instance}" \
                    --user selenium --startas /bin/bash \
                    -- -c "DISPLAY=":$(expr $UBIQUITOUS_XVFB_DISPLAY_BASE + $instance - 1)" exec ${UBIQUITOUS_JAVA_NODE} ${UBIQUITOUS_JAVA_CHROME} ${UBIQUITOUS_JAVA_SELENIUM} -role node -nodeConfig /opt/selenium/node.${instance}.json -log $UBIQUITOUS_SELENIUM_NODE_LOG.$instance"
        done
    fi
}

stop() {
    if [[ " ${services[@]} " =~ " nginx " ]]; then
        start-stop-daemon --stop \
                --oknodo --retry 5 --pidfile "$UBIQUITOUS_NGINX_PIDFILE"
    fi

    if [[ " ${services[@]} " =~ " php-fpm " ]]; then
        start-stop-daemon --stop \
                --oknodo --retry 5 --pidfile "$UBIQUITOUS_PHPFPM_PIDFILE"
    fi

    if [[ " ${services[@]} " =~ " postgresql " ]]; then
        /usr/bin/pg_ctlcluster \
                --skip-systemctl-redirect -m fast 9.5-main stop -- -w
    fi

    if [[ " ${services[@]} " =~ " selenium-hub " ]]; then
        start-stop-daemon --stop \
                --oknodo --retry 5 --pidfile "$UBIQUITOUS_SELENIUM_HUB_PIDFILE"
    fi

    if [[ " ${services[@]} " =~ " selenium-node " ]]; then
        instances=( $(systemd_get_service_instances selenium-node) )
        for instance in ${instances[@]}; do
            start-stop-daemon --stop \
                    --oknodo --retry 5 --pidfile "${UBIQUITOUS_SELENIUM_NODE_PIDFILE}.${instance}"
        done
    fi

    if [[ " ${services[@]} " =~ " x11vnc " ]]; then
        instances=( $(systemd_get_service_instances x11vnc) )
        for instance in ${instances[@]}; do
            start-stop-daemon --stop \
                    --oknodo --retry 5 --pidfile "${UBIQUITOUS_X11VNC_PIDFILE}.${instance}"
        done
    fi

    if [[ " ${services[@]} " =~ " xvfb " ]]; then
        instances=( $(systemd_get_service_instances xvfb) )
        for instance in ${instances[@]}; do
            start-stop-daemon --stop \
                    --oknodo --retry 5 --pidfile "${UBIQUITOUS_XVFB_PIDFILE}.${instance}"
        done
    fi
}

case "$action" in
    start)
        start
        ;;

    stop)
        stop
        ;;

    restart)
        stop
        start
        ;;
esac
